/*
        Найти определитель матрицы n-ого порядка
    Возвращает -1, если передана некорректная матрица
    Возвращает -2, если передан некорректный порядок матрицы
    Возвращает -3, если передан некорректный указатель на result
    Возвращает -4, если не удалось выделить нужное количество памяти для функции
    Возвращает -5, если произошла непредвиденная ошибка
    Возвращает 0, если всё прошло успешно
*/ 
int findDet(double **matrix, int size, double *result);

/*
        Найти ранг матрицы sizeY x sizeX
    Возвращает -1, если передана некорректная матрица
    Возвращает -2, если переданы некорректные sizeX или sizeY
    Возвращает -3, если произошла непредвиденная ошибка
    Возвращает 0, если всё прошло успешно
*/ 
int findRang(double **matrix, int sizeY, int sizeX, int *rang);

/*
        Найти произведение двух матриц
    Возвращает -1, если переданы некорректные матрицы
    Возвращает -2, если переданы некорректные размеры матриц
    Возвращает -3, если не удалось выделить нужное количество памяти для функции
    Возвращает -4, если произошла непредвиденная ошибка
    Возвращает 0, если всё прошло успешно
*/ 
int power(double **firstMatrix, int firstSizeY, int firstSizeX, double **secondMatrix,int secondSizeY, int secondSizeX, double ***result);

/*
        Найти обратную матрицу
    Возвращает -1, если переданы некорректные размеры матрицы
    Возвращает -2, если не удалось выделить нужное количество памяти для функции 
    Возвращает -3, если невозможно найти обратную матрицу
    Возвращает -4, если произошла непредвиденная ошибка
    Возвращает 0, если всё прошло успешно
*/ 
int findInverse(double **matrix, int amount, double *det, double ***result);